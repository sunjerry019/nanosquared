#!/usr/bin/env python3

"""
Provides reference lookup for WinCamD
"""

from collections import namedtuple

import os,sys

from cameras.camera import Camera
from enum import Enum

base_dir = os.path.dirname(os.path.realpath(__file__))
root_dir = os.path.abspath(os.path.join(base_dir, ".."))
if root_dir not in sys.path:
    sys.path.insert(0, root_dir) 

from cameras.all_constants import CameraAxes

class StrEnum(str, Enum):
    """
    Enum where members are also (and must be) strings

    Copied from https://github.com/python/cpython/blob/817a6bc9f7b802511c4d42273a621c556a48870b/Lib/enum.py#L1114
    """

    def __new__(cls, *values):
        if len(values) > 3:
            raise TypeError('too many arguments for str(): %r' % (values, ))
        if len(values) == 1:
            # it must be a string
            if not isinstance(values[0], str):
                raise TypeError('%r is not a string' % (values[0], ))
        if len(values) >= 2:
            # check that encoding argument is a string
            if not isinstance(values[1], str):
                raise TypeError('encoding must be a string, not %r' % (values[1], ))
        if len(values) == 3:
            # check that errors argument is a string
            if not isinstance(values[2], str):
                raise TypeError('errors must be a string, not %r' % (values[2]))
        value = str(*values)
        member = str.__new__(cls, value)
        member._value_ = value
        return member

    __str__ = str.__str__

    __format__ = str.__format__

    def _generate_next_value_(name, start, count, last_values):
        """
        Return the lower-cased version of the member name.
        """
        return name.lower()

class WinCamAxes(CameraAxes, StrEnum):
    X    = 'x'
    Y    = 'y'
    BOTH = 'xy'

# For the ProfileID Values, look at dataray-profiles-enum.pdf
_profiles = [
    "DEFAULT_PROFILE" ,
    "BS_PROFILE_X" ,
    "BS_PROFILE_Y" ,
    "BS_PROFILE_S" ,
    "BR_PROFILE_X" ,
    "BR_PROFILE_Y" ,
    "BM_PROFILE_ZM2" ,
    "BM_PROFILE_ZM1" ,
    "BM_PROFILE_Z" ,
    "BM_PROFILE_ZP1" ,
    "BM_PROFILE_ZP2" ,
    "BM_PROFILE_M45" ,
    "BM_PROFILE_P45" ,
    "BM_PROFILE_Z2" ,
    "BC_PROFILE_U1" ,
    "BC_PROFILE_V1" ,
    "BC_PROFILE_U2" ,
    "BC_PROFILE_V2" ,
    "BC_PROFILE_U3" ,
    "BC_PROFILE_V3" ,
    "BC_PROFILE_U4" ,
    "BC_PROFILE_V4" ,
    "WC_PROFILE_X" ,
    "WC_PROFILE_Y" ,
    "WC_PROFILE_XB" ,
    "WC_PROFILE_YB" ,
    "WC_DIV_X" ,
    "WC_DIV_Y" ,
]
WCD_Profiles = namedtuple("Profiles", _profiles)(*range(len(_profiles)))

# For buttonID values, look at dataray-index-to-test-parameters-enum.pdf
_btns  = [
    "BlankParameters", 
    "DefaultParameters", 
    "u_BeamR_Width_at_Clip_1", 
    "u_BeamR_Width_at_Clip_2", 
    "u_BeamR_GFit", 
    "u_BeamR_TopHat", 
    "v_BeamR_Width_at_Clip_1", 
    "v_BeamR_Width_at_Clip_2", 
    "v_BeamR_GFit", 
    "v_BeamR_TopHat", 
    "v1_BeamC_Width_at_Clip_1", 
    "v1_BeamC_Width_at_Clip_2", 
    "v1_BeamC_GFit", 
    "v1_BeamC_TopHat", 
    "u1_BeamC_Width_at_Clip_1", 
    "u1_BeamC_Width_at_Clip_2", 
    "u1_BeamC_GFit", 
    "u1_BeamC_TopHat", 
    "v2_BeamC_Width_at_Clip_1", 
    "v2_BeamC_Width_at_Clip_2", 
    "v2_BeamC_GFit", 
    "v2_BeamC_TopHat", 
    "u2_BeamC_Width_at_Clip_1", 
    "u2_BeamC_Width_at_Clip_2", 
    "u2_BeamC_GFit", 
    "u2_BeamC_TopHat", 
    "v3_BeamC_Width_at_Clip_1", 
    "v3_BeamC_Width_at_Clip_2", 
    "v3_BeamC_GFit", 
    "v3_BeamC_TopHat", 
    "u3_BeamC_Width_at_Clip_1", 
    "u3_BeamC_Width_at_Clip_2", 
    "u3_BeamC_GFit", 
    "u3_BeamC_TopHat", 
    "v4_BeamC_Width_at_Clip_1", 
    "v4_BeamC_Width_at_Clip_2", 
    "v4_BeamC_GFit", 
    "v4_BeamC_TopHat", 
    "u4_BeamC_Width_at_Clip_1", 
    "u4_BeamC_Width_at_Clip_2", 
    "u4_BeamC_GFit", 
    "u4_BeamC_TopHat", 
    "minus2_BeamMap_Width_at_Clip_1", 
    "minus2_BeamMap_Width_at_Clip_2", 
    "minus2_BeamMap_GFit", 
    "minus2_BeamMap_TopHat", 
    "minus1_BeamMap_Width_at_Clip_1", 
    "minus1_BeamMap_Width_at_Clip_2", 
    "minus1_BeamMap_GFit", 
    "minus1_BeamMap_TopHat", 
    "zero_BeamMap_Width_at_Clip_1", 
    "zero_BeamMap_Width_at_Clip_2", 
    "zero_BeamMap_GFit", 
    "zero_BeamMap_TopHat", 
    "plus1_BeamMap_Width_at_Clip_1", 
    "plus1_BeamMap_Width_at_Clip_2", 
    "plus1_BeamMap_GFit", 
    "plus1_BeamMap_TopHat", 
    "plus2_BeamMap_Width_at_Clip_1", 
    "plus2_BeamMap_Width_at_Clip_2", 
    "plus2_BeamMap_GFit", 
    "plus2_BeamMap_TopHat", 
    "plus45_BeamMap_Width_at_Clip_1", 
    "plus45_BeamMap_Width_at_Clip_2", 
    "plus45_BeamMap_GFit", 
    "plus45_BeamMap_TopHat", 
    "minus45_BeamMap_Width_at_Clip_1", 
    "minus45_BeamMap_Width_at_Clip_2", 
    "minus45_BeamMap_GFit", 
    "minus45_BeamMap_TopHat", 
    "u_BeamScope_Width_at_Clip_1", 
    "u_BeamScope_Width_at_Clip_2", 
    "u_BeamScope_GFit", 
    "u_BeamScope_TopHat", 
    "v_BeamScope_Width_at_Clip_1", 
    "v_BeamScope_Width_at_Clip_2", 
    "v_BeamScope_GFit", 
    "v_BeamScope_TopHat", 
    "u_WinCamD_Width_at_Clip_1", 
    "u_WinCamD_Width_at_Clip_2", 
    "u_WinCamD_GFit", 
    "u_WinCamD_TopHat", 
    "v_WinCamD_Width_at_Clip_1", 
    "v_WinCamD_Width_at_Clip_2", 
    "v_WinCamD_GFit", 
    "v_WinCamD_TopHat", 
    "Xc_BeamR", 
    "Yc_BeamR", 
    "Xg_BeamR", 
    "Yg_BeamR", 
    "Xp_BeamR", 
    "Yp_BeamR", 
    "uM2_NA_BeamC_alt", 
    "vM2_NA_BeamC_alt", 
    "Uniformity_WinCamD", 
    "Ewidth_WinCamD", 
    "Ellipticity_BeamR", 
    "Power_BeamR", 
    "Xc1_BeamC", 
    "Yc1_BeamC", 
    "Xg1_BeamC", 
    "Yg1_BeamC", 
    "Xp1_BeamC", 
    "Yp1_BeamC", 
    "Xc2_BeamC", 
    "Yc2_BeamC", 
    "Xg2_BeamC", 
    "Yg2_BeamC", 
    "Xp2_BeamC", 
    "Yp2_BeamC", 
    "Xc3_BeamC", 
    "Yc3_BeamC", 
    "Xg3_BeamC", 
    "Yg3_BeamC", 
    "Xp3_BeamC", 
    "Yp3_BeamC", 
    "Xc4_BeamC", 
    "Yc4_BeamC", 
    "Xg4_BeamC", 
    "Yg4_BeamC", 
    "Xp4_BeamC", 
    "Yp4_BeamC", 
    "uMsquared_BeamC_Alt", 
    "uM2_Zo_BeamC_Alt", 
    "vMsquared_BeamC_Alt", 
    "vM2_Zo_BeamC_Alt", 
    "Ellipticity_BeamC", 
    "Power_BeamC", 
    "Xc_BeamMap", 
    "Yc_BeamMap", 
    "Xg_BeamMap", 
    "Yg_BeamMap", 
    "Xp_BeamMap", 
    "Yp_BeamMap", 
    "Ellipticity_BeamMap", 
    "Power_BeamMap", 
    "DivergenceNA_BeamMap", 
    "DivergenceDegrees_BeamMap", 
    "DivergenceRadians_BeamMap", 
    "Msquared_BeamMap", 
    "M2_2Wo_BeamMap", 
    "M2_Zo_BeamMap", 
    "M2_Zr_BeamMap", 
    "M2_Theta_BeamMap", 
    "M2_NA_BeamMap", 
    "Xc_BeamScope", 
    "Yc_BeamScope", 
    "Xg_BeamScope", 
    "Yg_BeamScope", 
    "Xp_BeamScope", 
    "Yp_BeamScope", 
    "Ellipticity_BeamScope", 
    "Power_BeamScope", 
    "uDivergenceNA_BeamC", 
    "uDivergenceDegrees_BeamC", 
    "uDivergenceRadians_BeamC", 
    "uMsquared_BeamC", 
    "uM2_2Wo_BeamC", 
    "uM2_Zo_BeamC", 
    "uM2_Zr_BeamC", 
    "uM2_Theta_BeamC", 
    "uM2_NA_BeamC", 
    "vDivergenceNA_BeamC", 
    "vDivergenceDegrees_BeamC", 
    "vDivergenceRadians_BeamC", 
    "vMsquared_BeamC", 
    "vM2_2Wo_BeamC", 
    "vM2_Zo_BeamC", 
    "vM2_Zr_BeamC", 
    "vM2_Theta_BeamC", 
    "vM2_NA_BeamC", 
    "Xc_WinCamD", 
    "Yc_WinCamD", 
    "Xg_WinCamD", 
    "Yg_WinCamD", 
    "Xp_WinCamD", 
    "Yp_WinCamD", 
    "Ellipticity_WinCamD", 
    "Power_WinCamD", 
    "Oreintation_WinCamD", 
    "MajorWidth_WinCamD", 
    "MinorWidth_WinCamD", 
    "MeanWidth_WinCamD", 
    "Peak_WinCamD", 
    "AverageFluence_WinCamD", 
    "uM2_M2_Device", 
    "uM2_2Wo_Device", 
    "uM2_Zo_Device", 
    "uM2_Zr_Device", 
    "uM2_Theta_Device", 
    "uM2_NA_Device", 
    "vM2_M2_Device", 
    "vM2_2Wo_Device", 
    "vM2_Zo_Device", 
    "vM2_Zr_Device", 
    "vM2_Theta_Device", 
    "vM2_NA_Device", 
    "ID_WANDER", 
    "PointingX_BeamMapC", 
    "PointingY_BeamMapC", 
    "PointingX_BeamMap", 
    "Msquared_BeamMap_Alt", 
    "M2_Zo_BeamMap_Alt", 
    "M2_Theta_BeamMap_Alt", 
    "M2_Zo_BeamMap_Alt2", 
    "u_BeamR_GFitWidth", 
    "v_BeamR_GFitWidth", 
    "v1_BeamC_GFitWidth", 
    "u1_BeamC_GFitWidth", 
    "v2_BeamC_GFitWidth", 
    "u2_BeamC_GFitWidth", 
    "v3_BeamC_GFitWidth", 
    "u3_BeamC_GFitWidth", 
    "v4_BeamC_GFitWidth", 
    "u4_BeamC_GFitWidth", 
    "minus2_BeamMap_GFitWidth", 
    "minus1_BeamMap_GFitWidth", 
    "zero_BeamMap_GFitWidth", 
    "plus1_BeamMap_GFitWidth", 
    "plus2_BeamMap_GFitWidth", 
    "plus45_BeamMap_GFitWidth", 
    "minus45_BeamMap_GFitWidth", 
    "u_BeamScope_GFitWidth", 
    "v_BeamScope_GFitWidth", 
    "u_WinCamD_GFitWidth", 
    "v_WinCamD_GFitWidth", 
    "MajorWidth_ISO11146", 
    "MinorWidth_ISO11146", 
    "ELPDEG_ISO11146", 
    "x_WinCam_Divergence_at_Clip_1", 
    "x_WinCam_Divergence_at_Clip_2", 
    "y_WinCam_Divergence_at_Clip_1", 
    "y_WinCam_Divergence_at_Clip_2", 
    "Xu_WinCamD", 
    "Yu_WinCamD", 
    "u2_WinCamD_Width_at_Clip_1", 
    "u2_WinCamD_Width_at_Clip_2", 
    "u2_WinCamD_GFit", 
    "u2_WinCamD_TopHat", 
    "v2_WinCamD_Width_at_Clip_1", 
    "v2_WinCamD_Width_at_Clip_2", 
    "v2_WinCamD_GFit", 
    "v2_WinCamD_TopHat", 
    "Ellipticity_WinCamD_alt", 
    "Oreintation_WinCamD_alt", 
    "MajorWidth_WinCamD_alt", 
    "MinorWidth_WinCamD_alt", 
    "MeanWidth_WinCamD_alt", 
    "Peak_WinCamD_alt", 
    "MajorWidth_ISO11146_alt", 
    "MinorWidth_ISO11146_alt", 
    "ELPDEG_ISO11146_alt", 
    "Ewidth_WinCamD_alt", 
    "Xc_WinCamD_alt", 
    "Yc_WinCamD_alt", 
    "Xu_WinCamD_alt", 
    "Yu_WinCamD_alt", 
    "Xg_WinCamD_alt", 
    "Yg_WinCamD_alt", 
    "Xp_WinCamD_alt", 
    "Yp_WinCamD_alt", 
    "d63_major_WinCamD", 
    "d63_minor_WinCamD", 
    "d63_WinCamD", 
    "A_d63_WinCamD", 
    "P_d63_WinCamD", 
    "I63_WinCamD", 
    "Theta_63_WinCamD", 
    "u_Pointing", 
    "v_Pointing", 
    "u2_Pointing", 
    "v2_Pointing", 
    "MB_Header", 
    "MB_Major", 
    "MB_Minor", 
    "MB_Mean", 
    "MB_Deff", 
    "MB_E", 
    "MB_Oreintation", 
    "MB_Xc", 
    "MB_Yc", 
    "MB_Gauss", 
    "MB_NU", 
    "MB_Clocking", 
    "MB_I_peak", 
    "MB_Power", 
    "MB_S_rel", 
    "MB_D_rel", 
    "MB_Xcg", 
    "MB_Ycg", 
    "WC_AreaGFit", 
    "StartSpare", 
    "Spare31", 
    "Last_PARAMETER_ID", 
    "SetClipLevel1", 
    "SetClipLevel2", 
    "PeakButton", 
    "StatusButton", 
    "ZeroButton", 
    "SpacerButton1", 
    "SpacerButton2", 
    "ZoomButton", 
    "CrossHairButton", 
    "AuxStageScale_2D", 
    "TwoDsetup_2D", 
    "SetReference_2D", 
    "Reference_2D", 
    "HomeStage_2D", 
    "Scan_2D", 
    "DoSearch", 
    "FindCenter_2D", 
    "ReDo2D", 
    "MessageButton", 
    "Best_u_Divergence", 
    "Best_v_Divergence", 
    "Reset_Divergence", 
    "CrossHairButton_alt", 
    "Exposure_spare1", 
    "Exposure_spare2", 
    "ZeroButton_alt_0", 
    "ZeroButton_alt_1", 
    "bWavelength", 
    "Source_offset", 
    "DisplayArea1", 
    "DisplayArea2", 
    "MB_Setup", 
    "MB_Label2", 
    "MB_Spot_Sep", 
    "MB_Guass_Sep", 
    "MB_I_Guass", 
    "MB_Io_Ave", 
    "MB_Ps", 
    "MB_spare1", 
    "MB_spare2", 
    "MB_spare3", 
    "MB_spare4", 
    "MB_spare5", 
    "Ellipticity_WinCamD_1", 
    "Ellipticity_WinCamD_2", 
    "Ellipticity_WinCamD_3", 
    "Ellipticity_WinCamD_4", 
    "Orientation_WinCamD_1", 
    "Orientation_WinCamD_2", 
    "Orientation_WinCamD_3", 
    "Orientation_WinCamD_4", 
    "MajorWidth_WinCamD_1", 
    "MajorWidth_WinCamD_2", 
    "MajorWidth_WinCamD_3", 
    "MajorWidth_WinCamD_4", 
    "MinorWidth_WinCamD_1", 
    "MinorWidth_WinCamD_2", 
    "MinorWidth_WinCamD_3", 
    "MinorWidth_WinCamD_4", 
    "MeanWidth_WinCamD_1", 
    "MeanWidth_WinCamD_2", 
    "MeanWidth_WinCamD_3", 
    "MeanWidth_WinCamD_4", 
    "Peak_WinCamD_1", 
    "Peak_WinCamD_2", 
    "Peak_WinCamD_3", 
    "Peak_WinCamD_4", 
    "MajorWidth_ISO11146_1", 
    "MajorWidth_ISO11146_2", 
    "MajorWidth_ISO11146_3", 
    "MajorWidth_ISO11146_4", 
    "MinorWidth_ISO11146_1", 
    "MinorWidth_ISO11146_2", 
    "MinorWidth_ISO11146_3", 
    "MinorWidth_ISO11146_4", 
    "ELPDEG_ISO11146_1", 
    "ELPDEG_ISO11146_2", 
    "ELPDEG_ISO11146_3", 
    "ELPDEG_ISO11146_4", 
    "Ewidth_WinCamD_1", 
    "Ewidth_WinCamD_2", 
    "Ewidth_WinCamD_3", 
    "Ewidth_WinCamD_4", 
    "Xc_WinCamD_1", 
    "Xc_WinCamD_2", 
    "Xc_WinCamD_3", 
    "Xc_WinCamD_4", 
    "Yc_WinCamD_1", 
    "Yc_WinCamD_2", 
    "Yc_WinCamD_3", 
    "Yc_WinCamD_4", 
    "Xu_WinCamD_1", 
    "Xu_WinCamD_2", 
    "Xu_WinCamD_3", 
    "Xu_WinCamD_4", 
    "Yu_WinCamD_1", 
    "Yu_WinCamD_2", 
    "Yu_WinCamD_3", 
    "Yu_WinCamD_4", 
    "Xg_WinCamD_1", 
    "Xg_WinCamD_2", 
    "Xg_WinCamD_3", 
    "Xg_WinCamD_4", 
    "Yg_WinCamD_1", 
    "Yg_WinCamD_2", 
    "Yg_WinCamD_3", 
    "Yg_WinCamD_4", 
    "Xp_WinCamD_1", 
    "Xp_WinCamD_2", 
    "Xp_WinCamD_3", 
    "Xp_WinCamD_4", 
    "Yp_WinCamD_1", 
    "Yp_WinCamD_2", 
    "Yp_WinCamD_3", 
    "Yp_WinCamD_4", 
    "Exposure_1", 
    "Exposure_2", 
    "Exposure_3", 
    "Exposure_4", 
    "ZeroButton_1", 
    "ZeroButton_2", 
    "ZeroButton_3", 
    "ZeroButton_4", 
    "CrossHairButton_1", 
    "CrossHairButton_2", 
    "CrossHairButton_3", 
    "CrossHairButton_4", 
    "GainButton_1", 
    "GainButton_2", 
    "GainButton_3", 
    "GainButton_4", 
    "Blank_Button_1", 
    "Blank_Button_2", 
    "Blank_Button_3", 
    "Blank_Button_4", 
    "Blank_Button_5", 
    "Blank_Button_6", 
    "Blank_Button_7", 
    "Blank_Button_8", 
    "Blank_Button_9", 
    "Blank_Button_10", 
    "Blank_Button_11", 
    "Blank_Button_12", 
    "Blank_Button_13", 
    "Blank_Button_14", 
    "Blank_Button_15", 
    "Last_ID"
]
OCX_Buttons = namedtuple("Buttons", _btns)(*range(len(_btns)))

_clip_modes = ["CLIP_LEVEL_METHOD", "D4SIGMA_METHOD"]
CLIP_MODES = namedtuple("ClipModes", _clip_modes)(*range(len(_clip_modes)))